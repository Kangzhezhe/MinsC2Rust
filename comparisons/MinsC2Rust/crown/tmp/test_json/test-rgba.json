{
    "test_to_string": "test_to_string() {\n  char buf[256];\n  rgba_t color = rgba_new(0xffcc00ff);\n  rgba_to_string(color, buf, 256);\n  assert(0 == strcmp(\"#ffcc00\", buf));\n\n  color = rgba_new(0xffcc0050);\n  rgba_to_string(color, buf, 256);\n  assert(0 == strcmp(\"rgba(255, 204, 0, 0.31)\", buf));\n}\n",
    "test_rgba": "test_rgba() {\n  short ok;\n  int32_t val = rgba_from_string(\"rgba(255, 30   , 0, .5)\", &ok);\n  assert(ok);\n  assert(0xff1e007f == val);\n\n  val = rgba_from_string(\"rgba(0,0,0, 1)\", &ok);\n  assert(ok);\n  assert(0x000000ff == val);\n}\n",
    "main": "main(int argc, char **argv){\n  test_named();\n  test_rgb();\n  test_rgba();\n  test_hex();\n  test_to_string();\n  printf(\"\\n  \\e[32m\\u2713 \\e[90mok\\e[0m\\n\\n\");\n  return 0;\n}",
    "test_hex": "test_hex() {\n  short ok;\n  int32_t val = rgba_from_string(\"#ff1e00\", &ok);\n  assert(ok);\n  assert(0xff1e00ff == val);\n\n  val = rgba_from_string(\"#ffffff\", &ok);\n  assert(ok);\n  assert(0xffffffff == val);\n\n  val = rgba_from_string(\"#ffcc00\", &ok);\n  assert(ok);\n  assert(0xffcc00ff == val);\n\n  val = rgba_from_string(\"#fco\", &ok);\n  assert(ok);\n  assert(0xffcc00ff == val);\n}\n",
    "test_named": "test_named() {\n  short ok;\n  int32_t val = rgba_from_string(\"olive\", &ok);\n  assert(ok);\n  assert(0x808000FF == val);\n}\n",
    "test_rgb": "test_rgb() {\n  short ok;\n  int32_t val = rgba_from_string(\"rgb(255, 30   , 0)\", &ok);\n  assert(ok);\n  assert(0xff1e00ff == val);\n\n  val = rgba_from_string(\"rgb(0,0,0)\", &ok);\n  assert(ok);\n  assert(0x000000ff == val);\n}\n",
    "extra": "{'__anon34a7bb7c0108': 'typedef struct {\\n  double r, g, b, a;\\n};', 'RGBA_H': '#define RGBA_H', 'rgba_t': '} rgba_t;'} extract_info: [\n#include <stdio.h>\n#include <assert.h>\n#include <string.h>\n\n//\n// rgba.h\n//\n// Copyright (c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n//\n\n#ifndef RGBA_H\n#define RGBA_H\n\n#include <stdint.h>\n\n/*\n * RGBA struct.\n */\n\ntypedef struct {\n  double r, g, b, a;\n} rgba_t;\n\n// protos\n\nrgba_t\nrgba_new(uint32_t rgba);\n\nuint32_t\nrgba_from_string(const char *str, short *ok);\n\nvoid\nrgba_to_string(rgba_t rgba, char *buf, size_t len);\n\nvoid\nrgba_inspect(uint32_t rgba);\n\n#endif /* RGBA_H */\n/*\n * Test named colors.\n */\n\nvoid\n\n/*\n * Test rgb()\n */\n\nvoid\n\n/*\n * Test rgba()\n */\n\nvoid\n\n/*\n * Test #rgb and #rrggbb\n */\n\nvoid\n\n/*\n * Test to string.\n */\n\nvoid\n\n/*\n * Run tests.\n */\n\nint\n]"
}