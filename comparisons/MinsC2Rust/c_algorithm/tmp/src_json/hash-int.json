{
    "int_hash": "unsigned int int_hash(void *vlocation)\n{\n\tint *location;\n\n\tlocation = (int *) vlocation;\n\n\treturn (unsigned int) *location;\n}\n",
    "extra": "{'ALGORITHM_HASH_INT_H': '#define ALGORITHM_HASH_INT_H'} extract_info: [/*\n\nCopyright (c) 2005-2008, Simon Howard\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted, provided\nthat the above copyright notice and this permission notice appear\nin all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\nCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n */\n\n/*\n\nCopyright (c) 2005-2008, Simon Howard\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted, provided\nthat the above copyright notice and this permission notice appear\nin all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\nCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n */\n\n/**\n * @file hash-int.h\n *\n * Hash function for a pointer to an integer.  See @ref int_hash.\n */\n\n#ifndef ALGORITHM_HASH_INT_H\n#define ALGORITHM_HASH_INT_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/**\n * Generate a hash key for a pointer to an integer.  The value pointed\n * at is used to generate the key.\n *\n * @param location        The pointer.\n * @return                A hash key for the value at the location.\n */\n\nunsigned int int_hash(void *location);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* #ifndef ALGORITHM_HASH_INT_H */\n\n\n/* Hash function for a pointer to an integer */\n\n\n]"
}