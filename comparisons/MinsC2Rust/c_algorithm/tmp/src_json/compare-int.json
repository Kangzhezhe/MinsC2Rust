{
    "int_equal": "int int_equal(void *vlocation1, void *vlocation2)\n{\n\tint *location1;\n\tint *location2;\n\n\tlocation1 = (int *) vlocation1;\n\tlocation2 = (int *) vlocation2;\n\n\treturn *location1 == *location2;\n}\n",
    "int_compare": "int int_compare(void *vlocation1, void *vlocation2)\n{\n\tint *location1;\n\tint *location2;\n\n\tlocation1 = (int *) vlocation1;\n\tlocation2 = (int *) vlocation2;\n\n\tif (*location1 < *location2) {\n\t\treturn -1;\n\t} else if (*location1 > *location2) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n",
    "extra": "{'ALGORITHM_COMPARE_INT_H': '#define ALGORITHM_COMPARE_INT_H'} extract_info: [/*\n\nCopyright (c) 2005-2008, Simon Howard\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted, provided\nthat the above copyright notice and this permission notice appear\nin all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\nCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n */\n\n/*\n\nCopyright (c) 2005-2008, Simon Howard\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted, provided\nthat the above copyright notice and this permission notice appear\nin all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\nCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n */\n\n/**\n * @file compare-int.h\n *\n * Comparison functions for pointers to integers.\n *\n * To find the difference between two values pointed at, use\n * @ref int_compare.\n *\n * To find if two values pointed at are equal, use @ref int_equal.\n */\n\n#ifndef ALGORITHM_COMPARE_INT_H\n#define ALGORITHM_COMPARE_INT_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/**\n * Compare the integer values pointed at by two pointers to determine\n * if they are equal.\n *\n * @param location1       Pointer to the first value to compare.\n * @param location2       Pointer to the second value to compare.\n * @return                Non-zero if the two values are equal, zero if the\n *                        two values are not equal.\n */\n\nint int_equal(void *location1, void *location2);\n\n/**\n * Compare the integer values pointed at by two pointers.\n *\n * @param location1        Pointer to the first value to compare.\n * @param location2        Pointer to the second value to compare.\n * @return                 A negative value if the first value is less than\n *                         the second value, a positive value if the first\n *                         value is greater than the second value, zero if\n *                         they are equal.\n */\n\nint int_compare(void *location1, void *location2);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* #ifndef ALGORITHM_COMPARE_INT_H */\n\n\n/* Comparison functions for a pointer to an integer */\n\n\n}\n\n\n]"
}