Type,C 类型,C 示例,Rust 类型（安全/惯用）,Rust 示例
基本整数,int,int a = 42;,i32,let a: i32 = 42;
基本整数,unsigned int,unsigned int b = 7;,u32,let b: u32 = 7;
长整型,long,long v = total;,i64,let v: i64 = total;
长整型,unsigned long,unsigned long n = size;,u64,let n: u64 = size;
大整数,long long,long long acc = sum;,i64,let acc: i64 = sum;
大整数,unsigned long long,unsigned long long idx = pos;,u64,let idx: u64 = pos;
字节,unsigned char,unsigned char byte = 0xFF;,u8,let byte: u8 = 0xFF;
下标/大小,size_t,size_t len = strlen(s);,usize,let len: usize = buf.len();
浮点,float,float f = 3.14f;,f32,let f: f32 = 3.14;
浮点,double,double d = 2.0;,f64,let d: f64 = 2.0;
布尔,bool,bool ok = true;,bool,let ok = true;
枚举,enum Mode,"enum Mode { Idle, Busy };","pub enum Mode { Idle, Busy }","pub enum Mode { Idle, Busy }"
结构体,struct Point,struct Point { int x; int y; };,"pub struct Point { pub x: i32, pub y: i32 }","pub struct Point { pub x: i32, pub y: i32 }"
数组视图,int arr[],"void foo(int arr[], size_t n);",&[i32],fn foo(arr: &[i32]) {}
指针（可变）,int *p,int *p = &value;,&mut i32,let p: &mut i32 = &mut value;
指针（只读）,const int *p,const int *p = data;,&i32,let p: &i32 = data;
泛型指针,void *ctx,void process(void *ctx);,泛型参数 T 或 Ptr<T> 包装,fn process<T>(ctx: &mut T) {}
C 字符串,char *s,"char *s = \""Hello\"";",String / &str,"let s = String::from(\""Hello\"");"
函数指针,int (*cb)(int),int (*cb)(int) = handler;,fn(i32) -> i32 或 Arc<dyn Fn(i32) -> i32>,let cb: fn(i32) -> i32 = handler;
文件句柄,FILE *fp,"FILE *fp = fopen(name,\""rb\"");",FilePtr,"let mut fp = c_fopen!(name, \""rb\"");"
全局变量,static int counter;,static int counter = 0;,LazyLock<Mutex<i32>>,static COUNTER: LazyLock<Mutex<i32>> = LazyLock::new(|| Mutex::new(0));
变参列表,va_list args,"va_start(args, fmt);",VaList<'a'>,let mut args = VaList::from_slice(values);